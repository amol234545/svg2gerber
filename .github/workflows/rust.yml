name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Windows x86_64
            runner-os: windows-latest
            cargo-target: x86_64-pc-windows-msvc

    name: CI - ${{ matrix.name }}
    runs-on: ${{ matrix.runner-os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
          targets: ${{ matrix.cargo-target }}

      - name: Set UUID
        id: generate-uuid
        uses: shaybentk/uuid-action@v0.0.1
        with:
          name: ${{ github.sha }}
      - name: Build
        run: |
          cargo build \
          --workspace \
          --all-features \
          --target ${{ matrix.cargo-target }}

      - run: ls target/${{ matrix.cargo-target }}/debug
      - name: Download
        if: ${{ matrix.cargo-target }} == x86_64-pc-windows-msvc
        uses: actions/upload-artifact@v4.6.2  
        with:
          name: ${{ steps.generate-uuid.outputs.uuid }}
          path: target/${{ matrix.cargo-target }}/debug/svg2gerber.exe
      - name: Set UUID
        id: generate-uuids
        uses: shaybentk/uuid-action@v0.0.1
        with:
          name: ${{ github.sha }} 
      - name: Others
        if: false == (${{ matrix.cargo-target }} == x86_64-pc-windows-msvc)
        uses: actions/upload-artifact@v4.6.2  
        with:
          name: ${{ steps.generate-uuids.outputs.uuid }}
          path: target/${{ matrix.cargo-target }}/debug/svg2gerber
      - name: Test
        run: |
          cargo test \
          --workspace \
          --all-features \
          --target ${{ matrix.cargo-target }}
